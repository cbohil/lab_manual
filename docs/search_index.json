[
["psychopy.html", "Chapter 9 Psychopy for Data Collection 9.1 Getting Started 9.2 Frequently Asked Questions (FAQs)", " Chapter 9 Psychopy for Data Collection Psychopy is a free open-source package for building experiments in Python that is developed and maintained by the University of Nottingham in the UK. It has been active since 2007, but recent updates have introduced a purpose-built solution for online data collection called Pavlovia. Pavlovia is a front-end for gitlab and allows for version control of experiment code. 9.1 Getting Started 9.1.1 PsychoPy A standalone version (no Python install required) can be downloaded from the project’s website. After installing Psychopy, the best place to start is with the PsychoPy documentation, which includes guides on getting started building experiments. Included with the initial download are several minimalist, functional experiment demos that provide a good starting point for building your experiment. 9.1.2 Pavlovia After installing PsychoPy, the next step in getting an online experiment running is setting up an account on Pavlovia. Note: In order for the account to fall under the UCF site license, the associated email must have the *@ucf.edu domain. Best practice is to use the email of the faculty member in charge of the lab. This ensures that the faculty member retains admin control of the account. The account username and password will likely need to be provided to students to allow them to develop and access experiments on Pavlovia, and the username and password need not correspond to the faculty email or any existing passwords. Notification settings can also be changed on Pavlovia to control where the various types of email notifications are directed. 9.1.3 SONA 9.2 Frequently Asked Questions (FAQs) While many issues one might encounter are addressed in the documentation, keep in mind that, as with all free open-source software, PsychoPy and Pavlovia are perpetually under development and there will be bugs. Multiple resources exist to facilitate solving such problems – the PsychoPy Forum is home to a growing and very helpful community, UCF Psychology will be adding a private discussion board (to be added later) specifically for helping each other use PsychoPy – but ultimately the how-to of building your experiment falls to you, the researcher. A few common questions have, however, been addressed below, and suggestions for addition to this list are always welcomed. 9.2.1 Compliance Can I collect restricted data using PsychoPy? No. While the program itself allows for the collection of many kinds of data, including survey, the data storage of Pavlovia does not meet UCF’s InfoSec requirements for sensitive or identifiable data. What can I do if I need to collect restricted data then? Additional questions can be added to SONA’s intake questionnaire to securely collect sensitive or identifiable data. 9.2.2 Technical Is there a built-in component for providing feedback based on participants’ responses? Astonishingly, no. The way to provide corrective feedback is using the Code Component. An example of the Python code necessary is provided below. Note that the strings used are f-strings – this is necessary for successful translation to JS. In Begin Experiment: msg='' #msg variable just needs some value at start In Begin Routine: if not resp.keys: # failed to respond msg=\"Repeat trial. Use the labelled keys.\" elif resp.corr: #stored on last run routine msg=f\"Correct! \\n\\nAnswer: {AnswerName}\" elif not resp.corr: #wrong answer msg=f\"Wrong. \\n\\nAnswer: {AnswerName}\" In End Routine: (If repeating trials without responses) if not resp.keys: repeatTrial.finished = False # \"repeatTrial\" must be \"trials\" in the JS code else: repeatTrial.finished = True Why does my feedback work in Python but not in JS? The built-in Python-&gt;JS translator is good but not perfect. Be sure you are using f-strings Why are my stimulus image files not being read into my experiment for presentation? PsychoPy’s pathing is picky - be sure your image files (.PNG, .wav, etc.) are in the root directory with your experiment file (.psyexp or .py) and your conditions file(s) (.csv, .xlsx, etc.) 9.2.3 Miscellaneous "]
]
